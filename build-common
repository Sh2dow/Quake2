#!/bin/bash

# allow to specify target from command line
if [ "$1" == "--help" ] || [ "$1" == "/?" ] || [ "$1" == "-?" ]; then
	echo "Usage: $0 [target]"
	echo "  default target is $TARGET"
	exit 1
fi

[ $1 ] && TARGET=$1


TIMEFORMAT="Build time: %1R sec"

#?? TODO:
#?? - add function "build" with args (one of them - work dir)
#?? - check ".project is newer than makefile" here (or in makefile?)

thisfile=$BASH_SOURCE		#!! check!

# get $rootdir var
dir="${thisfile%/*}"
if [ $dir == $thisfile ]; then
	dir="."
fi
rootdir=$dir
tools=$rootdir/Tools		#?? review: not working for SymInfoBuilder, may be should remove from all locations

# default output directory
[ "$OUT" ]      || OUT="Release"

#----------------------------------------------------------
#	set default platform
#----------------------------------------------------------

[ "$PLATFORM" ] || PLATFORM="vc-win32"
# force PLATFORM=linux under Linux OS
[ "$OSTYPE" == "linux-gnu" ] && PLATFORM="linux"

#----------------------------------------------------------
#	configure build tools
#----------------------------------------------------------

[ "$PLATFORM" == "mingw32" ] || [ "$PLATFORM" == "cygwin" ] &&
	export PATH=/bin:/usr/bin:$PATH

case "$PLATFORM" in
	"vc-win32")
		build="vc32tools --make"
		maptype="vc"
		libext="lib"
		;;
	"linux"|"mingw32"|"cygwin")
		build="$tools/gccfilt make -f"		# logging + colorizing
		maptype="gcc"
		libext="a"
		;;
	"")
		echo "PLATFORM is not specified"
		exit 1
		;;
	*)
		echo "Unknown PLATFORM=\"$PLATFORM\""
		exit 1
esac


#----------------------------------------------------------
#	make libs
#----------------------------------------------------------

if ! [ -f "$rootdir/lib/libs-$PLATFORM.$libext" ]; then
	pushd $rootdir/lib >/dev/null
	$build libs-$PLATFORM
	popd >/dev/null
fi


#----------------------------------------------------------
#	helper functions
#----------------------------------------------------------

function BuildTarget()
{
	time $build makefile-$PLATFORM $TARGET || exit 1
	# generate symbols.dbg
	echo "$tools/SymInfoBuilder/work.pl $OUT $maptype"
	Tools/SymInfoBuilder/work.pl $OUT $maptype
}
